#include <iostream>
#include <vector>
#include <set>
#include <algorithm>

using namespace std;

constexpr int MAXN = 2 * 1e5;

//int par[MAXN], sz[MAXN];

//int get(int n){
//    if (n == par[n]) return n;
//    return get(par[n]);
//}
//
//void Union(int x,int y){
//    x = get(x); y = get(y);
//    if(x == y) return;
//    if (sz[x] < sz[y]) swap(x,y);
//    par[y] = x;
//    sz[x] += sz[y];
//}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    long long n, m;
    cin >> n >> m;
    vector <vector <long long > > v(n, vector <long long > (n)), a(n, vector <long long > (n)), c(n, vector <long long > (n));
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < n; ++j) {
            cin >> v[i][j];
        }
    }
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < n; ++j) {
            cin >> a[i][j];
        }
    }
    for(int i = 0; i < n; ++i) {
        for(int j = 0; j < n; ++j){
            for(int k = 0; k < n; ++k){
                c[i][j] += ((v[i][k] * a[k][j]) % m);
                c[i][j] %= m;
            }
        }
    }
    for(int i = 0; i < n; ++i){
        for(int j = 0; j < n; ++j){
            cout << c[i][j] << ' ';
        }
        cout << '\n';
    }
}