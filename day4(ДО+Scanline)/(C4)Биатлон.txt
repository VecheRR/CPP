#include <iostream>
#include <vector>
#include <algorithm>

#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,tune=native")

typedef long long LL;

using namespace std;
vector <LL> close;

LL _find (const LL l1, const LL r1, LL val) {
    LL l = l1;
    LL r = r1 + 1;
    while (l + 1 <= r) {
        LL m = (l + r) / 2;
        if (close[m] > val) {
            r = m;
        } else {
            l = m + 1;
        }
    }
    return r - l1;
}

LL isInv (LL l, LL r) {
    if (l == r) {
        return 0;
    }
    LL m = (l + r) / 2;
    LL inv = isInv(l, m) + isInv(m + 1, r);
    for (int i = m + 1; i <= r; ++i) {
        inv += (m - l + 1) - _find(l, m, close[i]);
    }
    sort(close.begin() + l, close.begin() + r + 1);
    return inv;
}

LL N = 0, L, W;

int main () {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout.tie(nullptr);
    cin >> N >> L;
    vector <pair< LL, LL > > a;
    for (LL i = 0; i < N; ++i) {
        cin >> W;
        a.push_back({L * W + i, i});
    }
    sort (a.begin(), a.end());
    for (LL i = 0; i < N; ++i) close.push_back(a[i].second);
    cout << isInv(0, N - 1);
}