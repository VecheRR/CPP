#include <iostream>
#include <string>
#include <cmath>
#include <vector>
#include <algorithm>
#include <stack>
#include <list>

using namespace std;

vector <int > vec(3e6), t(3e6);

#define MAXN 1e9 + 13

void f(int a, int b, int c) {
    if (b == c) {
        t[a] = vec[b];
    } else {
        int tm = (b + c) / 2;
        f(a * 2, b, tm);
        f(a * 2 + 1, tm + 1, c);
        t[a] = min(t[a * 2], t[a * 2 + 1]);
    }
}
int min(int a, int b, int c, int l, int r) {
    if (l > r){
        return MAXN;
    }
    if (l == b && r == c){
        return t[a];
    }
    int tm = (b + c) / 2;
    return min(min(a * 2, b, tm, l, min(r, tm)), min(a * 2 + 1, tm + 1, c, max(l, tm + 1), r));
}
int main() {
    int n, k;
    scanf("%d%d", &n, &k);
    for (int i = 1; i <= n; ++i){
        scanf("%d", &vec[i]);
    }
    f(1, 1, n);
    for (int i = 0; i <= n - k; ++i){
        printf("%d\n", min(1, 0, n - 1, i, i + k - 1));
    }
}